/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.Yahtzee;
import java.awt.*;
/**
 *
 * @author Steven Molitor and Chloe Revery
 */
public class NewMain extends javax.swing.JFrame {

    /**
     * Creates new form YahtzeeUI
     */
    public NewMain() {
        initComponents();
        
    }

    int dice1, dice2, dice3, dice4, dice5, dice6;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jToggleButton11 = new javax.swing.JToggleButton();
        jToggleButton12 = new javax.swing.JToggleButton();
        jToggleButton13 = new javax.swing.JToggleButton();
        jToggleButton14 = new javax.swing.JToggleButton();
        jToggleButton15 = new javax.swing.JToggleButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jToggleButton1.setText("   CP'S TURN    ");
        jToggleButton1.setBackground(Color.RED);

        jToggleButton2.setText("YOUR TURN");
        jToggleButton2.setBackground(Color.GREEN);

        jLabel1.setText("           YAHTZEE!");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jToggleButton2)
                .add(110, 110, 110)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(110, 110, 110)
                .add(jToggleButton1)
                .add(95, 95, 95))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jToggleButton2)
                    .add(jToggleButton1))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jToggleButton11.setText("HOLD");

        jToggleButton12.setText("HOLD");

        jToggleButton13.setText("HOLD");

        jToggleButton14.setText("HOLD");

        jToggleButton15.setText("HOLD");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jToggleButton11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jToggleButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(33, 33, 33)
                .add(jToggleButton13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jToggleButton14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jToggleButton15)
                .add(188, 188, 188))
            .add(jPanel2Layout.createSequentialGroup()
                .add(68, 68, 68)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 44, Short.MAX_VALUE)
                        .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(165, 165, 165))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 631, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jToggleButton11)
                    .add(jToggleButton12)
                    .add(jToggleButton13)
                    .add(jToggleButton14)
                    .add(jToggleButton15))
                .add(23, 23, 23))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jToggleButton3.setText("3 OF A KIND");

        jToggleButton4.setText("4 OF A KIND");

        jToggleButton5.setText("FULL HOUSE");

        jToggleButton6.setText("CHANCE");

        jToggleButton7.setText("YAHTZEE!");

        jToggleButton8.setText("SM. STRAIGHT");

        jToggleButton9.setText("LG. STRAIGHT");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jToggleButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToggleButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToggleButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToggleButton8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToggleButton9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToggleButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jToggleButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE, false)
                    .add(jToggleButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jToggleButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jToggleButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jToggleButton8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jToggleButton9)
                    .add(jToggleButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jToggleButton7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("YOU");

        jLabel11.setText("ROLL SCORE:");

        jLabel14.setText("TOTAL SCORE:");

        jLabel15.setText("0");

        jLabel16.setText("0");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(84, 84, 84)
                        .add(jLabel2))
                    .add(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel15))
                    .add(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel14)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel16)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(jLabel15))
                .add(18, 18, 18)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(jLabel16))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("CP");

        jButton1.setText("ROLL");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("SUBMIT");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("RULES");

        jButton4.setText("RESTART");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jLabel19.setText("Roll Number");

        jLabel20.setText("0");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(48, 48, 48)
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton3)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(224, 224, 224)
                                .add(jLabel3))))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(130, 130, 130)
                        .add(jLabel19)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel20)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel3))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(57, 57, 57)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton4)
                            .add(jButton3))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel19)
                    .add(jLabel20))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("CP");

        jLabel12.setText("ROLL SCORE:");

        jLabel13.setText("TOTAL SCORE:");

        jLabel17.setText("0");

        jLabel18.setText("0");

        jLabel10.setText("CP JUST PLAYED:");

        jLabel23.setText("# OF CP ROLLS:");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel4)
                .add(89, 89, 89))
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel5Layout.createSequentialGroup()
                                .add(jLabel12)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel17))
                            .add(jPanel5Layout.createSequentialGroup()
                                .add(jLabel13)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel18))
                            .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel22))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jLabel23)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel24)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jLabel17))
                .add(18, 18, 18)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(jLabel18))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(jLabel22))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel23)
                    .add(jLabel24))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 817, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 399, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void computerTurn() {
        
        cprollcount=0;
        jLabel24.setText("" + cprollcount);
        jLabel6.setText("The computer is playing...");  
        cprollcount++;
        jLabel24.setText("" + cprollcount);
        CPRoll();
        checkForMatches();
        //a new roll should appear onscreen
        //the computer should choose whether to submit
        //the computer should submit or hold buttons and roll again
        jLabel6.setText("The computer has finished its turn");
        //isWinner();
        setDiceNull();
        if (jToggleButton1.getBackground().equals(Color.GREEN)) {
            turnSwitch();
        }
    }
    
    int cptotal = 0;
    
    public void checkForMatches() {
        if (checkForYahtzee()) {
            jLabel17.setText("" + 50);
            jLabel18.setText("" + (cptotal + 50));
            setDiceNull();
            deselectHoldButtons();
            jLabel22.setText("YAHTZEE");
            turnSwitch();
        }
        if (checkForLargeStraight()) {
            jLabel17.setText("" + 40);
            jLabel18.setText("" + (cptotal + 40));
            setDiceNull();
            deselectHoldButtons();
            jLabel22.setText("LG. STRAIGHT");
            turnSwitch();

        }
        if (checkForSmallStraight()) {
            jLabel17.setText("" + 30);
            jLabel18.setText("" + (cptotal + 30));
            setDiceNull();
            deselectHoldButtons();
            jLabel22.setText("SM. STRAIGHT");
            turnSwitch();
        }
        if (checkForFullHouse()) {
            jLabel17.setText("" + 25);
            jLabel18.setText("" + (cptotal + 25));
            setDiceNull();
            deselectHoldButtons();
            jLabel22.setText("FULL HOUSE");
            turnSwitch();
        }
        if (checkForQuadruples()) {
            jLabel17.setText("" + (15 + addAllDice()));
            jLabel18.setText("" + (15 + cptotal + addAllDice()));
            setDiceNull();
            deselectHoldButtons();
            jLabel22.setText("4 OF A KIND");
            turnSwitch();
        }
        if (checkForTriples()) {
            jLabel17.setText("" + (10 + addAllDice()));
            jLabel18.setText("" + (10 + cptotal + addAllDice()));
            setDiceNull();
            deselectHoldButtons();
            jLabel22.setText("3 OF A KIND");
            turnSwitch();
        } else if (cprollcount==3) {
                jLabel17.setText("" + addAllDice());
                jLabel18.setText("" + (cptotal + addAllDice()));
                deselectRollDescriptions();
                setDiceNull();
                deselectHoldButtons();
                jLabel22.setText("CHANCE");
                turnSwitch();
            } else {
            holdDoubles();
            cprollcount++;
            jLabel24.setText("" + cprollcount);
            CPRoll();
            
            }
        
        //cptotal = java.lang.Integer.parseInt(jLabel18.getText());
    }
    
    public void holdDoubles() {
        if (dice1 == dice2) {
            jToggleButton1.setSelected(true);
            jToggleButton2.setSelected(true);
        }
        if (dice1 == dice3) {
            jToggleButton1.setSelected(true);
            jToggleButton3.setSelected(true);
        }
        if (dice1 == dice4) {
            jToggleButton1.setSelected(true);
            jToggleButton4.setSelected(true);
        }
        if (dice1 == dice5) {
            jToggleButton1.setSelected(true);
            jToggleButton5.setSelected(true);
        }
        if (dice2 == dice3) {
            jToggleButton2.setSelected(true);
            jToggleButton3.setSelected(true);
        }
        if (dice2 == dice4) {
            jToggleButton2.setSelected(true);
            jToggleButton4.setSelected(true);
        }
        if (dice2 == dice5) {
            jToggleButton2.setSelected(true);
            jToggleButton5.setSelected(true);
        }
        if (dice3 == dice4) {
            jToggleButton3.setSelected(true);
            jToggleButton4.setSelected(true);
        }
        if (dice3 == dice5) {
            jToggleButton3.setSelected(true);
            jToggleButton5.setSelected(true);
        }
        if (dice4 == dice5) {
            jToggleButton4.setSelected(true);
            jToggleButton5.setSelected(true);
        }
    }
    
    int cprollcount;
   
    //public void secondsDelay() {
      //  wait();
        //new javax.swing.Timer(4000, null).start();
        //notify();
        
    //}

    
    public void CPRoll() {
        //secondsDelay();
        new javax.swing.Timer(4000, null).start();
        
        //jLabel6.setText(null);
        deselectRollDescriptions();
        
                if (jToggleButton11.isSelected() == false) {
                    dice1 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice1)))); // NOI18N
                }
                if (jToggleButton12.isSelected() == false) {
                    dice2 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice2))));
                }
                if (jToggleButton13.isSelected() == false) {
                    dice3 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice3))));
                }
                if (jToggleButton14.isSelected() == false) {
                    dice4 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice4))));
                }
                if (jToggleButton15.isSelected() == false) {
                    dice5 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice5))));
                }
               
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        if (jToggleButton1.getBackground().equals(Color.GREEN)) {
            jLabel6.setText("It's not your turn!");
        } else if (jPanel4.getBackground().equals(Color.GREEN)) {
            jLabel6.setText("GAME OVER!  You win!  Press the RESTART button to play again.");
        } else if (jPanel5.getBackground().equals(Color.GREEN)) {
            jLabel6.setText("GAME OVER!  The computer player wins.  Press the RESTART button to play again.");
        } else {
            deselectRollDescriptions();
            jLabel6.setText(null);
            if (jLabel20.getText().equals("3")) jLabel6.setText("No more rolls available.");
            else {
                if (jToggleButton11.isSelected() == false) {
                    dice1 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice1)))); // NOI18N
                }
                if (jToggleButton12.isSelected() == false) {
                    dice2 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice2))));
                }
                if (jToggleButton13.isSelected() == false) {
                    dice3 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice3))));
                }
                if (jToggleButton14.isSelected() == false) {
                    dice4 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice4))));
                }
                if (jToggleButton15.isSelected() == false) {
                    dice5 = 1 + (int) (java.lang.Math.random() * 6);
                    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource(imageSelector(dice5))));
                }
                jLabel20.setText("" + (java.lang.Integer.parseInt(jLabel20.getText()) + 1));
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked
    
    public int addAllDice() {
        return (dice1 + dice2 + dice3 + dice4 + dice5);
    }
    

    int total = 0;
    
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (jToggleButton1.getBackground().equals(Color.GREEN)) {
            jLabel6.setText("It's not your turn!");
        } else if (jPanel4.getBackground().equals(Color.GREEN)) {
            jLabel6.setText("GAME OVER!  You win!  Press the RESTART button to play again.");
        } else if (jPanel5.getBackground().equals(Color.GREEN)) {
            jLabel6.setText("GAME OVER!  The computer player wins.  Press the RESTART button to play again.");
        } else {
            if (buttonCheck() == 0) jLabel6.setText("Please select a button.");
            if (jLabel20.getText().equals("0")) jLabel6.setText("You must roll first.");
            else {
            if (jLabel20.getText().equals("1") || jLabel20.getText().equals("2") || jLabel20.getText().equals("3")) {
                if (buttonCheck() > 1) {
                  jLabel6.setText("You have selected more than one button. Please deselect and try again.");
                }
                else {
                    jLabel6.setText(null);
                    if (jToggleButton3.isSelected()) {
                        if (!(checkForTriples())) { 
                            jLabel6.setText("You do not have 3 of a kind.");
                            deselectRollDescriptions();
                        }
                        if (checkForTriples()) {
                            jLabel15.setText("" + (10 + addAllDice()));
                            jLabel16.setText("" + (10 + total + addAllDice()));
                            setDiceNull();
                            deselectHoldButtons();
                            jLabel20.setText("0");
                            turnSwitch();
                        }
                    }
                    if (jToggleButton4.isSelected()) {
                        if (!(checkForQuadruples())) { 
                            jLabel6.setText("You do not have 4 of a kind.");
                            deselectRollDescriptions();
                        }
                        if (checkForQuadruples()) {
                            jLabel15.setText("" + (addAllDice() + 15));
                            jLabel16.setText("" + (total + 15 + addAllDice()));
                            setDiceNull();
                            deselectHoldButtons();
                            jLabel20.setText("0");
                            turnSwitch();
                        }
                    }
                    if (jToggleButton5.isSelected()) {
                        if (!(checkForFullHouse())) {
                            jLabel6.setText("You do not have a full house.");
                            deselectRollDescriptions();
                        }
                        if (checkForFullHouse()) {
                            jLabel15.setText("" + 25);
                            jLabel16.setText("" + (total + 25));
                            setDiceNull();
                            deselectHoldButtons();
                            jLabel20.setText("0");
                            turnSwitch();
                        }
                    }
                    if (jToggleButton8.isSelected()) {
                        if (!(checkForSmallStraight())) {
                            jLabel6.setText("You do not have a small straight.");
                            deselectRollDescriptions();
                        }
                        if (checkForSmallStraight()) {
                            jLabel15.setText("" + 30);
                            jLabel16.setText("" + (total + 30));
                            setDiceNull();
                            deselectHoldButtons();
                            jLabel20.setText("0");
                            turnSwitch();
                        }
                    }
                    if (jToggleButton9.isSelected()) {
                        if (!(checkForLargeStraight())) {
                            jLabel6.setText("You do not have a large straight.");
                            deselectRollDescriptions();
                        }
                        if (checkForLargeStraight()) {
                            jLabel15.setText("" + 40);
                            jLabel16.setText("" + (total + 40));
                            setDiceNull();
                            deselectHoldButtons();
                            jLabel20.setText("0");
                            turnSwitch();
                        }
                        
                    }
                    if (jToggleButton6.isSelected()) {
                        jLabel15.setText("" + addAllDice());
                        jLabel16.setText("" + (total + addAllDice()));
                        deselectRollDescriptions();
                        setDiceNull();
                        deselectHoldButtons();
                        jLabel20.setText("0");
                        turnSwitch();
                    }
                    if (jToggleButton7.isSelected()) {
                        if (!(checkForYahtzee())) {
                            jLabel6.setText("You do not have a Yahtzee.");
                            deselectRollDescriptions();
                        }
                        if (checkForYahtzee()) {
                            jLabel15.setText("" + 50);
                            jLabel16.setText("" + (total + 50));
                            setDiceNull();
                            deselectHoldButtons();
                            jLabel20.setText("0");
                            turnSwitch();
                            
                            
                        }
                        
                    
                    }
                    
               }
            }
            }
                //total = java.lang.Integer.parseInt(jLabel16.getText());
        }
    }//GEN-LAST:event_jButton2MouseClicked

    public void isWinner() {
        if (total > 299) {
            jPanel4.setBackground(Color.GREEN);
            jLabel6.setText("YOU WIN! Please restart.");
        }
        
        if (cptotal > 299) {
            jPanel5.setBackground(Color.GREEN);
            jLabel6.setText("CP WINS! Please restart. Better luck next time!");
        }
    }
    
    public void turnSwitch() {
        cptotal = java.lang.Integer.parseInt(jLabel18.getText());
        total = java.lang.Integer.parseInt(jLabel16.getText());
        isWinner();
        if (jToggleButton1.getBackground().equals(Color.GREEN)) {
            jToggleButton1.setBackground(Color.RED);
            jToggleButton2.setBackground(Color.GREEN);
        }
        else if (jToggleButton1.getBackground().equals(Color.RED)) {
            jToggleButton1.setBackground(Color.GREEN); 
            jToggleButton2.setBackground(Color.RED);
            computerTurn();
        }
    }
   
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        jLabel15.setText("0");
        jLabel16.setText("0");
        jLabel17.setText("0");
        jLabel18.setText("0");
        jLabel20.setText("0");
        jLabel20.setText("0");
        jLabel24.setText(null);
        jLabel22.setText(null);
        setDiceNull();
        deselectHoldButtons();
        deselectRollDescriptions();
        jLabel6.setText(null);
        jToggleButton1.setBackground(Color.RED);
        jToggleButton2.setBackground(Color.GREEN);
        jPanel4.setBackground(Color.WHITE);
        jPanel5.setBackground(Color.WHITE);
        total=0;
        cptotal=0;
    }//GEN-LAST:event_jButton4MouseClicked
    
    public void deselectRollDescriptions() {
        jToggleButton3.setSelected(false);
        jToggleButton4.setSelected(false);
        jToggleButton5.setSelected(false);
        jToggleButton6.setSelected(false);
        jToggleButton7.setSelected(false);
        jToggleButton8.setSelected(false);
        jToggleButton9.setSelected(false);
    }
    
    public void setDiceNull() {
        jLabel5.setIcon(null);
        jLabel21.setIcon(null);
        jLabel7.setIcon(null);
        jLabel8.setIcon(null);
        jLabel9.setIcon(null);
    }
    
    public void deselectHoldButtons() {
        jToggleButton11.setSelected(false);
        jToggleButton12.setSelected(false);
        jToggleButton13.setSelected(false);
        jToggleButton14.setSelected(false);
        jToggleButton15.setSelected(false);
    }
    
    public int buttonCheck() { //checks if more than one roll description button is selected
        int count = 0;
        if (jToggleButton3.isSelected()) count++;
        if (jToggleButton4.isSelected()) count++;
        if (jToggleButton5.isSelected()) count++;
        if (jToggleButton6.isSelected()) count++;
        if (jToggleButton7.isSelected()) count++;
        if (jToggleButton8.isSelected()) count++;
        if (jToggleButton9.isSelected()) count++;
        return count;
    }
    
    public boolean checkForFullHouse() {
        if ((dice1 == dice2) & (dice1 == dice3) & (dice4 == dice5)) return true;
        if ((dice1 == dice2) & (dice1 == dice4) & (dice3 == dice5)) return true;
        if ((dice1 == dice2) & (dice1 == dice5) & (dice3 == dice4)) return true;
        if ((dice1 == dice3) & (dice1 == dice4) & (dice2 == dice5)) return true;
        if ((dice1 == dice3) & (dice1 == dice5) & (dice2 == dice4)) return true;
        if ((dice1 == dice4) & (dice1 == dice5) & (dice2 == dice3)) return true;
        if ((dice2 == dice3) & (dice2 == dice4) & (dice1 == dice5)) return true;
        if ((dice2 == dice3) & (dice2 == dice5) & (dice1 == dice4)) return true;
        if ((dice2 == dice4) & (dice2 == dice5) & (dice1 == dice3)) return true;
        if ((dice3 == dice4) & (dice3 == dice5) & (dice1 == dice2)) return true;
        else return false;
    }
    
    public boolean checkForSmallStraight() {
        int count = 0;
        if (dice1 == dice2) count++;
        if (dice1 == dice3) count++;
        if (dice1 == dice4) count++;
        if (dice1 == dice5) count++;
        if (dice2 == dice3) count++;
        if (dice2 == dice4) count++;
        if (dice2 == dice5) count++;
        if (dice3 == dice4) count++;
        if (dice3 == dice5) count++;
        if (dice4 == dice5) count++;
        if (count > 1) return false;
        else return true;
    }
    
    public boolean checkForLargeStraight() {
        if (dice1 == dice2) return false;
        if (dice1 == dice3) return false;
        if (dice1 == dice4) return false;
        if (dice1 == dice5) return false;
        if (dice2 == dice3) return false;
        if (dice2 == dice4) return false;
        if (dice2 == dice5) return false;
        if (dice3 == dice4) return false;
        if (dice3 == dice5) return false;
        if (dice4 == dice5) return false;
        else return true;
    }
    
    public boolean checkForYahtzee() {
        if ((dice1 == dice2) & (dice2 == dice3) & (dice3 == dice4) & (dice4 == dice5)) return true;
        else return false;
    }
    
    public boolean checkForQuadruples() {
       if ((dice1 == dice2) & (dice1 == dice3) & (dice1 == dice4)) return true;
       if ((dice1 == dice2) & (dice1 == dice3) & (dice1 == dice5)) return true;
       if ((dice1 == dice2) & (dice1 == dice4) & (dice1 == dice5)) return true;
       if ((dice1 == dice3) & (dice1 == dice4) & (dice1 == dice5)) return true;
       if ((dice2 == dice3) & (dice2 == dice4) & (dice2 == dice5)) return true;
       else return false;
    }
    
    public boolean checkForTriples() {
       if ((dice1 == dice2) & (dice1 == dice3)) return true;
       if ((dice1 == dice2) & (dice1 == dice4)) return true;
       if ((dice1 == dice2) & (dice1 == dice5)) return true;
       if ((dice1 == dice3) & (dice1 == dice4)) return true;
       if ((dice1 == dice3) & (dice1 == dice5)) return true;
       if ((dice1 == dice4) & (dice1 == dice5)) return true;
       if ((dice2 == dice3) & (dice2 == dice4)) return true;
       if ((dice2 == dice3) & (dice2 == dice5)) return true;
       if ((dice2 == dice4) & (dice2 == dice5)) return true;
       if ((dice3 == dice4) & (dice3 == dice5)) return true;
       else return false;
    }
    
    public String imageSelector(int num) {
        if (num == 1) return ("/newdice1.jpg");
        if (num == 2) return ("/newdice2.jpg");
        if (num == 3) return ("/newdice3.jpg");
        if (num == 4) return ("/newdice4.jpg");
        if (num == 5) return ("/newdice5.jpg");
        else return ("/newdice6.jpg");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YahtzeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YahtzeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YahtzeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YahtzeeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YahtzeeUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton11;
    private javax.swing.JToggleButton jToggleButton12;
    private javax.swing.JToggleButton jToggleButton13;
    private javax.swing.JToggleButton jToggleButton14;
    private javax.swing.JToggleButton jToggleButton15;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    // End of variables declaration//GEN-END:variables

    
}

